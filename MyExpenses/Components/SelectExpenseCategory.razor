@inject CategoryService catService;
@inject SubCatService subCatService;
@inject ExpenseService expService;

<div class="row">

    <div class="col-12 col-md-5 order-md-last">
        <div class="accordion" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Add Expense Entry
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show " aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div class="card">

                            <div class="card-header text-center">
                                <span class="small">Selected Date: </span>
                                <div class="input-group text-center ">
                                    <button class="input-group-text col-1" @onclick="setSelectedDateToYesterday"><span class="text-info"><i class="bi bi-arrow-left-circle"></i></span></button>
                                    <span class="input-group-text text-primary col-9 fw-bold">@selectedDate.ToString("dddd, dd MMMM yyyy")</span>
                                    <InputDate @bind-Value="@selectedDate" class="col-2 form-control text-light"></InputDate>
                                </div>
                            </div>

                            <EditForm Model="expenseEntry" OnValidSubmit="@SaveExpenseEntry" class="card-body">

                                @* <label for="TDate">TDate</label>

                                <InputDate @bind-Value="@expenseEntry.TDate" class="form-control" id="TDate"></InputDate>
                                *@

                                @if (subCats is null)
                                {

                                }
                                else
                                {
                                    <label class="small col-form-label">Category</label>
                                    <InputSelect @bind-Value="expenseEntry.SubCatId" class="form-select">
                                        <option value="" selected>Select category...</option>
                                        @foreach (var subcat in subCats)
                                        {
                                            <option value="@subcat.SubCatId">@subcat.Category.CatName - @subcat.SubCatName </option>
                                        }
                                    </InputSelect>

                                }
                                <label for="Item" class="small col-form-label">Item</label>
                                <InputText @bind-Value="expenseEntry.Item" class="form-control" placeholder="Item description" id="Item" />

                                <label for="Currency" class="small">Currency @expenseEntry.Currency</label>
                                <div class="input-group">
                                    <InputSelect @bind-Value="expenseEntry.Currency" id="Currency" class="input-group-text col-3 col-lg-2 ">
                                        <option value="MOP" selected>MOP</option>
                                        <option value="HKD">HKD</option>
                                        <option value="RMB">RMB</option>
                                        <option value="USD">USD</option>
                                    </InputSelect>
                                    @if (expenseEntry.Currency != "MOP")
                                    {
                                        <InputNumber @bind-Value="expenseEntry.ForeignAmount" class="form-control col"></InputNumber>
                                        <lable class="input-group-text col-3 col-lg-2">MOP</lable>
                                    }
                                    <InputNumber @bind-Value="expenseEntry.Amount" class="form-control col"></InputNumber>
                                </div>



                                <input type="submit" class="btn btn-primary mt-3" value="Save" />
                            </EditForm>
                        </div>


                    </div>
                </div>
            </div>
        </div>

    </div>


    <div class="col-12 col-md-7">
        <div class="card mt-3 mt-md-0">
            <div class="card-header">
                <span class=""><i class="bi bi-book"></i></span> Expenses Log
            </div>
            <div class="card-body">
                @if (expenses is null || expenses.Count == 0)
                {
                    <span>Oops! No data.</span>
                }
                else
                {
                    @foreach (var group in expenses.OrderByDescending(e => e.TDate).GroupBy(e => e.TDate.Date))
                    {
                        <div class="card-body">
                            <span class="col fw-bold text-primary card-header-tabs">@group.Key.ToShortDateString() 
                                @if (group.Key == DateTime.Today)
                                {
                                    <span class="badge rounded-pill bg-primary"> Today </span>
                                }
                            </span>
                            
                            @foreach (var exp in group)
                            {
                                <div class="row border-bottom">
                                    <span class="col-6">@exp.SubCat.SubCatName <span class="" style="color: gray; font-size: 0.9rem;">@exp.Item</span></span>
                                    @if (exp.Currency != "MOP")
                                    {
                                        <div class="col text-end d-flex flex-column">
                                            <span class="text-end">@exp.Amount </span>
                                            <span class="text-info text-end" style="font-size: 0.9rem;">@exp.Currency @exp.ForeignAmount</span>
                                        </div>

                                    }
                                    else
                                    {
                                        <span class="col text-end">@exp.Amount</span>
                                    }
                                    <button class="col-1 btn text-info"><i class="bi bi-pen" @onclick="@(e => loadExpenseEntry(exp.Id))"></i></button>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>


@code {
    List<Category> categories;
    List<SubCat> subCats;
    List<Expense> expenses;

    private int selectedCatId = 0;
    private Expense expenseEntry = new()
        {
            Currency = "MOP"
        };
    DateTime selectedDate;

    protected override async Task<List<Category>> OnInitializedAsync()
    {
        selectedDate = DateTime.Now;
        expenses = await expService.GetAllExpensesAsync();
        subCats = await subCatService.GetSubCats();
        return categories = await catService.GetCategories();

    }

    async Task loadExpenseEntry(int expId)
    {
        expenseEntry = await expService.GetExpenseByIdAsync(expId);
        if (expenseEntry is not null)
        {
            selectedDate = expenseEntry.TDate;
        }

    }

    void setSelectedDateToYesterday()
    {
        selectedDate = selectedDate.AddDays(-1);

    }

    async Task SaveExpenseEntry()
    {
        expenseEntry.TDate = selectedDate;
        await expService.AddExpenseAsync(expenseEntry);
        expenses = await expService.GetAllExpensesAsync();

    }



}
